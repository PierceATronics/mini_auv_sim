#!/usr/bin/env python3

import subprocess
from subprocess import Popen
import os
import serial
import threading
import time

#ADD THIS SCRIPT TO SYSTEM PATH TO EXECUTE ANYWHERE BY RUNNING
#   ln -s $PWD/mini_auv_run /usr/bin/mini_auv_run

src_path = os.path.split(os.readlink('/usr/bin/mini_auv_run'))

executables = ["build/mini_auv_gazebo_plugins/MaestroEmulator", 
            "build/mini_auv_gazebo_plugins/PicoSensorHubEmulator"]

robot_name = "pico"
model_path = os.path.join(src_path[0], "models/pico/model.sdf")
spawn_vehicle = ["/usr/bin/gz", "model", "-m", robot_name, "-f", model_path, 
                "-x", "0.0", "-y", "0.0", "-z", "-1.0"]


#spawn the vehicle
subprocess.run(spawn_vehicle)

#used to help flush out stale data, since I can't seem to do it 
#in the C++ Maestro driver emulator
ser = serial.Serial("/dev/picoMaestroS", 115200)
time.sleep(1.0)    
if(ser.in_waiting > 0):
    ser.reset_input_buffer()
    print("[INFO]: Flushed out %d stale bytes for serial buffer." % ser.in_waiting)

ser.close()

#Start up hardware emulators
commands = [os.path.join(src_path[0], executable) for executable in executables]

procs = [Popen(cmd) for cmd in commands]

for p in procs:
    print("here")
    p.wait()



